From 2bb28d3b8d7c87a7f80340afb3a65e6eb0aed982 Mon Sep 17 00:00:00 2001
From: Thomas Nizan <tnizan@witekio.com>
Date: Thu, 24 Nov 2022 14:33:14 +0100
Subject: [PATCH] mario_changes

add ar0830
fix v4l2_subdev_pad_config
---
 kmod/ap1302.c | 49 ++++++++++++++++++++++++++++++++-----------------
 1 file changed, 32 insertions(+), 17 deletions(-)

diff --git a/ap1302.c b/ap1302.c
index 5ee9f63..b250c98 100644
--- a/ap1302.c
+++ b/ap1302.c
@@ -27,6 +27,7 @@
 #include <media/v4l2-fwnode.h>
 
 #define DRIVER_NAME "ap1302"
+#define AP1302_DRV_TAG "[PATCH] AP1302 Major Update with AR0830 support"
 
 #define AP1302_FW_WINDOW_SIZE			0x2000
 #define AP1302_FW_WINDOW_OFFSET			0x8000
@@ -514,7 +515,7 @@ static const struct ap1302_format_info supported_video_formats[] = {
 		.out_fmt = AP1302_PREVIEW_OUT_FMT_FT_YUV_JFIF
 			 | AP1302_PREVIEW_OUT_FMT_FST_YUV_420,
 	},
-#if 0 // MEDIA_BUS_FMT_VYYUYY8_1X24 for Xilinx only ?
+#if 1 // MEDIA_BUS_FMT_VYYUYY8_1X24 for Xilinx only ?
 	{
 		.code = MEDIA_BUS_FMT_VYYUYY8_1X24,
 		.out_fmt = AP1302_PREVIEW_OUT_FMT_FT_YUV_JFIF
@@ -565,6 +566,18 @@ static const struct ap1302_sensor_info ap1302_sensor_info[] = {
 			{ "vdd", 0 },
 			{ NULL, 0 },
 		},
+	}, {
+		.model = "onnn,ar0830",
+		.name = "ar0830",
+		.i2c_addr = 0x3c,
+		.resolution = { 3840, 2160 },
+		.format = MEDIA_BUS_FMT_SGRBG10_1X10,
+		.supplies = (const struct ap1302_sensor_supply[]) {
+			{ "vaa", 0 },
+			{ "vddio", 0 },
+			{ "vdd", 0 },
+			{ NULL, 0 },
+		},
 	},
 };
 
@@ -2186,12 +2199,12 @@ static void ap1302_ctrls_cleanup(struct ap1302_device *ap1302)
 
 static struct v4l2_mbus_framefmt *
 ap1302_get_pad_format(struct ap1302_device *ap1302,
-		      struct v4l2_subdev_pad_config *cfg,
+		      struct v4l2_subdev_state *sd_state,
 		      unsigned int pad, u32 which)
 {
 	switch (which) {
 	case V4L2_SUBDEV_FORMAT_TRY:
-		return v4l2_subdev_get_try_format(&ap1302->sd, cfg, pad);
+		return v4l2_subdev_get_try_format(&ap1302->sd, sd_state, pad);
 	case V4L2_SUBDEV_FORMAT_ACTIVE:
 		return &ap1302->formats[pad].format;
 	default:
@@ -2200,16 +2213,16 @@ ap1302_get_pad_format(struct ap1302_device *ap1302,
 }
 
 static int ap1302_init_cfg(struct v4l2_subdev *sd,
-			   struct v4l2_subdev_pad_config *cfg)
+			   struct v4l2_subdev_state *sd_state)
 {
-	u32 which = cfg ? V4L2_SUBDEV_FORMAT_TRY : V4L2_SUBDEV_FORMAT_ACTIVE;
+	u32 which = sd_state ? V4L2_SUBDEV_FORMAT_TRY : V4L2_SUBDEV_FORMAT_ACTIVE;
 	struct ap1302_device *ap1302 = to_ap1302(sd);
 	const struct ap1302_sensor_info *info = ap1302->sensor_info;
 	unsigned int pad;
 
 	for (pad = 0; pad < ARRAY_SIZE(ap1302->formats); ++pad) {
 		struct v4l2_mbus_framefmt *format =
-			ap1302_get_pad_format(ap1302, cfg, pad, which);
+			ap1302_get_pad_format(ap1302, sd_state, pad, which);
 
 		format->width = info->resolution.width;
 		format->height = info->resolution.height;
@@ -2233,7 +2246,7 @@ static int ap1302_init_cfg(struct v4l2_subdev *sd,
 }
 
 static int ap1302_enum_mbus_code(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *sd_state,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct ap1302_device *ap1302 = to_ap1302(sd);
@@ -2259,7 +2272,7 @@ static int ap1302_enum_mbus_code(struct v4l2_subdev *sd,
 }
 
 static int ap1302_enum_frame_size(struct v4l2_subdev *sd,
-				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_state *sd_state,
 				  struct v4l2_subdev_frame_size_enum *fse)
 {
 	struct ap1302_device *ap1302 = to_ap1302(sd);
@@ -2303,13 +2316,13 @@ static int ap1302_enum_frame_size(struct v4l2_subdev *sd,
 }
 
 static int ap1302_get_fmt(struct v4l2_subdev *sd,
-			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_state *sd_state,
 			  struct v4l2_subdev_format *fmt)
 {
 	struct ap1302_device *ap1302 = to_ap1302(sd);
 	const struct v4l2_mbus_framefmt *format;
 
-	format = ap1302_get_pad_format(ap1302, cfg, fmt->pad, fmt->which);
+	format = ap1302_get_pad_format(ap1302, sd_state, fmt->pad, fmt->which);
 
 	mutex_lock(&ap1302->lock);
 	fmt->format = *format;
@@ -2319,7 +2332,7 @@ static int ap1302_get_fmt(struct v4l2_subdev *sd,
 }
 
 static int ap1302_set_fmt(struct v4l2_subdev *sd,
-			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_state *sd_state,
 			  struct v4l2_subdev_format *fmt)
 {
 	struct ap1302_device *ap1302 = to_ap1302(sd);
@@ -2329,9 +2342,9 @@ static int ap1302_set_fmt(struct v4l2_subdev *sd,
 
 	/* Formats on the sink pads can't be changed. */
 	if (fmt->pad != AP1302_PAD_SOURCE)
-		return ap1302_get_fmt(sd, cfg, fmt);
+		return ap1302_get_fmt(sd, sd_state, fmt);
 
-	format = ap1302_get_pad_format(ap1302, cfg, fmt->pad, fmt->which);
+	format = ap1302_get_pad_format(ap1302, sd_state, fmt->pad, fmt->which);
 
 	/* Validate the media bus code, default to the first supported value. */
 	for (i = 0; i < ARRAY_SIZE(supported_video_formats); i++) {
@@ -2372,7 +2385,7 @@ static int ap1302_set_fmt(struct v4l2_subdev *sd,
 }
 
 static int ap1302_get_selection(struct v4l2_subdev *sd,
-				struct v4l2_subdev_pad_config *cfg,
+				struct v4l2_subdev_state *sd_state,
 				struct v4l2_subdev_selection *sel)
 {
 	struct ap1302_device *ap1302 = to_ap1302(sd);
@@ -2647,7 +2660,7 @@ static const struct v4l2_subdev_internal_ops ap1302_subdev_internal_ops = {
  */
 
 static int ap1302_sensor_enum_mbus_code(struct v4l2_subdev *sd,
-					struct v4l2_subdev_pad_config *cfg,
+					struct v4l2_subdev_state *sd_state,
 					struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct ap1302_sensor *sensor = to_ap1302_sensor(sd);
@@ -2661,7 +2674,7 @@ static int ap1302_sensor_enum_mbus_code(struct v4l2_subdev *sd,
 }
 
 static int ap1302_sensor_enum_frame_size(struct v4l2_subdev *sd,
-					 struct v4l2_subdev_pad_config *cfg,
+					 struct v4l2_subdev_state *sd_state,
 					 struct v4l2_subdev_frame_size_enum *fse)
 {
 	struct ap1302_sensor *sensor = to_ap1302_sensor(sd);
@@ -2682,7 +2695,7 @@ static int ap1302_sensor_enum_frame_size(struct v4l2_subdev *sd,
 }
 
 static int ap1302_sensor_get_fmt(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *sd_state,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct ap1302_sensor *sensor = to_ap1302_sensor(sd);
@@ -3162,6 +3175,8 @@ static int ap1302_load_firmware(struct ap1302_device *ap1302)
 	{
 		dev_err(ap1302->dev,
 			 "AP1302_BOOTDATA_STAGE not 0xFFFF : %04X (POLL %d)\n",value,ret);
+		// Dump
+		ap1302_log_status(&ap1302->sd);
 		return ret;
 	}
 
-- 
2.25.1

